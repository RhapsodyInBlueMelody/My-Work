.assembly extern mscorlib
{
  .ver 4:0:0:0
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 ) // .z\V.4..
}
.assembly 'whileLoop'
{
  .custom instance void class [mscorlib]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::'.ctor'() =  (
		01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
		63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01       ) // ceptionThrows.

  .hash algorithm 0x00008004
  .ver  0:0:0:0
}
.module whileLoop.exe // GUID = {027B954C-FC03-4A17-8AA9-37E9D18A4908}


.namespace WhileLoop
{
  .class private auto ansi beforefieldinit WhileLoop
  	extends [mscorlib]System.Object
  {

    // method line 1
    .method public hidebysig specialname rtspecialname 
           instance default void '.ctor' ()  cil managed 
    {
        // Method begins at RVA 0x2050
	// Code size 7 (0x7)
	.maxstack 8
	IL_0000:  ldarg.0 
	IL_0001:  call instance void object::'.ctor'()
	IL_0006:  ret 
    } // end of method WhileLoop::.ctor

    // method line 2
    .method private static hidebysig 
           default void Main ()  cil managed 
    {
        // Method begins at RVA 0x2058
	.entrypoint
	// Code size 59 (0x3b)
	.maxstack 2
	.locals init (
		string	V_0)
	IL_0000:  ldstr " "
	IL_0005:  stloc.0 
	IL_0006:  br IL_0025

	IL_000b:  ldstr "Are you done? [Yes] [No]: "
	IL_0010:  call void class [mscorlib]System.Console::Write(string)
	IL_0015:  call string class [mscorlib]System.Console::ReadLine()
	IL_001a:  stloc.0 
	IL_001b:  ldstr "You are in while loop"
	IL_0020:  call void class [mscorlib]System.Console::WriteLine(string)
	IL_0025:  ldloc.0 
	IL_0026:  callvirt instance string string::ToLower()
	IL_002b:  ldstr "yes"
	IL_0030:  call bool string::op_Inequality(string, string)
	IL_0035:  brtrue IL_000b

	IL_003a:  ret 
    } // end of method WhileLoop::Main

  } // end of class WhileLoop.WhileLoop
}

